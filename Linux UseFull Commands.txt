systemctl list-units --type=service --state=running 			>>>	    check running service in linux
--------------------------------------------------------------------------------------------------------
** NGINX 
ps -ax | grep nginx
kill -s QUIT 1628
nginx -s reload
---------------------------------------------------------------------------------------------------------
du -s -h -c *													>>>		CHECK TOTAL FILE AND FOLDER DISK SPACE USAGE IN GB
adduser aiuserinj --home /data/aiuserinj						>>>		ADD USER WITH CUSTOME HOME DIRECTORY
useradd testuser -m -d /data/testuserdir	
deluser --remove-home <username>								>>>		REMOVE USER WITH HOME DIR
userdel -r dharmik_rawal < username >	
lsb_release -a													>>>		CHECK LINUX VERSION
uname -r														>>>		CHECK KERNEL VERSION
sudo dmidecode -s system-serial-number	To check the serial number of the system in Ubuntu, you can use the following commands12:
sudo dmidecode -t 1 | grep -i serial	
systemctl list-units -a	To List inactive unit, Type:
systemctl list-units -a --state=inactive	
sudo lshw -numeric -C display	
--------------------------------------------------------------------------------------------------------------										

** NVIDIA GRAPHICS CHECK

nvidia-smi													>>>		CHECK NVIDIA DRIVER VERSION
lspci | grep VGA	
lspci | grep VGA	
inxi -Ga	
hwinfo --gfxcard | grep Model	
hwinfo --arch	
lshw	
ubuntu-drivers list --gpgpu	CHECK AVAILABLE DRIVERS IN UBUNTU
apt search nvidia-drive
ubuntu-drivers devices

dmidecode --type connector										>>>		CHECK AVAILABLE HDD SLOTTS OR CONNECTORS
smartctl --scan	
tail -f syslog.1 | grep -i " Feb 7"								>>>		LOG MONITORING WITH TAIL COMMAND
-----------------------------------------------------------------------------------------------------------------------
** MONITORING SERVER TEMPERATURE 	

apt install smarttools
smartctl -a /dev/sda
apt install lm-sensors
sudo sensors-detect
sensors
inxi -xD
--------------------------------------------------------------------------------------------------------------------------
** SERVER PROCESS MONITORING COMMAND	
glances
top
vnstat
ps -e | grep
sudo lsof -nP | grep LISTEN
sudo lsof -i tcp
sudo lsof -i udp
sudo netstat -l
HTOP
IFTOP
LSOF
--------------------------------------------------------------------------------------------------------------------------
** HOW TO SET SPECIAL PERMISSION ( Numerically setuid=4 ; setgid=2 ; sticky=1 )	
chmod u+s file
chmod g+s directory
chmod o+s directory
chmod 2770 directory
-------------------------------------------------------------------------------------------------------------------------------
** CHEK OPEN PORTS IN UBUNTU	
nmap localhost
nmap -p 80 localhost
sudo lsof -nP | grep LISTEN
sudo lsof -i tcp
sudo lsof -i udp
sudo netstat -l
sudo netstat -lu
sudo netstat -lt
sudo ss -l
sudo ss -lt
sudo ss -lu
sudo ss -l | grep 9016
ufw status verbose
ufw allow 8080
ufw status
sudo ufw allow from 192.168.1.10 to any port 22
sudo ufw allow from any to 74.86.26.69 port 443 proto tcp
ufw allow from 192.168.1.0/24 to any app Samba
sudo ufw app list
sudo ufw deny 25
sudo ufw delete 5
netstat -lntu
ufw allow proto tcp from 192.168.0.2 to any port 22
ufw deny 22
ufw delete deny 22
ufw status numbered
ufw delete (rule number)
ss -tulpn | grep LISTEN
netstat -tulpn | grep LISTEN
lsof -i -P -n
more /etc/services
------------------------------------------------------------------------------------------------------------

** MANAGE SWAP MEMORY IN LINUX	
swapoff -a									>>		to clear swap memory
swapon -a	
free -m										>>		to check swap memory
cat /proc/sys/vm/swappiness					>>		check swapiness value in linux
sudo sysctl vm.swappiness=x					>>		to set swapiness value in linux
sudo sysctl vm.swappiness=1	
nvcc --version 								>>		You can verify that you have a CUDA-capable GPU
------------------------------------------------------------------------------------------------------------
** EXTENDING SWAP LOGICAL VOLUME	
swapoff -v /dev/VolGroup00/LogVol01			>>		Disable swapping for the associated logical volume:
lvresize /dev/VolGroup00/LogVol01 -L +2G	>>		Resize the LVM2 logical volume by 2 GB:
mkswap /dev/VolGroup00/LogVol01				>>		Format the new swap space:
swapon -v /dev/VolGroup00/LogVol01			>>		Enable the extended logical volume:
cat /proc/swaps								>>		To test if the swap logical volume was successfully extended and activated, inspect active swap space:
free -h	
------------------------------------------------------------------------------------------------------------
** CREATING LOGICAL VOLUME FOR SWAP	
mkswap /dev/VolGroup00/LogVol02									>>		Format the new swap space
/dev/VolGroup00/LogVol02   swap     swap    defaults     0 0	>>		Add the following entry to the /etc/fstab file:
systemctl daemon-reload											>>		Regenerate mount units so that your system registers the new configuration:
swapon -v /dev/VolGroup00/LogVol02								>>		Activate swap on the logical volume:
cat /proc/swaps													>>		To test if the swap logical volume was successfully created and activated, inspect active swap space:
free -h	
-----------------------------------------------------------------------------------------------------------
*** username ALL=(ALL) NOPASSWD: /path/to/command				>>		https://chatgpt.com/share/5cfc08fe-b413-48b3-b349-12ec7804f4c8
john ALL=(ALL) NOPASSWD: /usr/sbin/systemctl restart apache2	>>		https://chatgpt.com/share/59b74e64-b852-4844-8aae-7bdcfbeb5ddb
john ALL=(www-data) NOPASSWD: /usr/sbin/systemctl restart apache2	>>	To allow john to run systemctl restart apache2 as the user www-data

-----------------------------------------------------------------------------------------------------------
*****  SET SERVER TIME ZONE
timedatectl set-ntp yes
timedatectl set-ntp no
timedatectl set-time 2019-04-10
timedatectl set-time 21:45:53
timedatectl list-timezones
timedatectl set-timezone UTC
timedatectl set-local-rtc 1
timedatectl set-local-rtc 0

date -s "2024-09-09 20:23:00"
sudo chronyc -a makestep
sudo timedatectl set-ntp true

---------------------------------------------------------------------------------------------------
sudo apt update --fix-missing								>>			Install Missing packages
sudo apt install -f											>>			APT lists the missing packages on your system.
sudo dpkg --configure -a									>>			Force Reconfigure or Remove Broken Packages with DPKG
sudo dpkg -l | grep ^..R									>>			Check if DPKG marked some packages as needing a reinstall
sudo dpkg --purge --force-all [package-name]				>>			If the command above returns a list of one or more packages, try removing the packages by typing:
sudo apt clean												>>			Claan packages
-------------------------------------------------------------------------------------------------------
****Resolve DPKG Lock Issue	
sudo rm /var/lib/apt/lists/lock	 							>>			To fix the problem, remove the lock file manually:
sudo rm /var/cache/apt/archives/lock	 					>>			remove the lock in cache:

--------------------------------------------------------------------------------------------------------------
*** Linux Log command
journalctl -S 2024-08-26 -U 2024-08-29
---------------------------------------------------------------------------------------------------------------------
*** Solution: Fix Permissions for the SSH Config File
https://chatgpt.com/share/b6aaee3a-de50-42d1-9bdb-69d4b0854ec1
---------------------------------------------------------------------------------------------------------------------
*** OpenSSH Client is Installed
Get-WindowsCapability -Online | Where-Object Name -like 'OpenSSH.Client*'
Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
---------------------------------------------------------------------------------------------------------------------
*** GENERATE SSH KEY
ssh-keygen -t rsa -b 4096 or 2048 -C "username"
ssh-keygen -t ed25519 -C "username"
ssh-keygen -t ed25519 -c "jay"	GENERATE ED25519 SSH KEY 
ssh-copy-id -p 1124 -i /home/prakashsingh/.ssh/dev_ed25519.pub prakash_singh@14.194.133.90

---------------------------------------------------------------------------------------------------------------------
** install falcon sensor in linux
sudo apt update
sudo apt upgrade
sudo dpkg -i falcon-sensor_<version>.deb
sudo /opt/CrowdStrike/falconctl -s --cid=<your_crowdstrike_customer_id>
sudo systemctl start falcon-sensor
sudo systemctl enable falcon-sensor
sudo /opt/CrowdStrike/falconctl -g --cid

---------------------------------------------------------------------------------------------------------------------------
** Crontab 
crontab -l			>> CHECK the status 
crontab -e			>> setting up crontab

--------------------------------------------------------------------------------------------------------
### Automated Server Cleaning for linux servers

https://chatgpt.com/share/1c3e721c-1357-40d8-84bd-4acc8bb7d7f6

==================================================================================================
### packages upgrade

>> sudo apt install --only-upgrade <package_name>
>> sudo apt update && sudo apt upgrade -y
>> sudo apt full-upgrade -y

====================================================================================================
### check the version of the SSH client

>> ssh -V
>> dpkg -l | grep openssh-server
====================================================================
                                                #########################################    GENERAL COMMANDS    ################################################

dpkg-query -l
dpkg-query -S <file_path>
dpkg-query -L <package_name>
sudo snap install teams-for-linux
sudo dpkg -i teams*.deb
sudo apt-get install -f    >>  - Fix broken dependencies
sudo dpkg --configure -a  >>  Check for Broken Packages
sudo apt autoremove
apt-get remove --purge <package_name>    >>   Remove and Reinstall Packages
sudo apt-get check    >> Check for broken dependencies.
sudo apt-mark unhold <package_name> - Unhold a package.
apt list --upgradable
sudo find / -type d -name "nagioslogserver"        >>>    You can search for the nagioslogserver directory
locate nagioslogserver                             >>>    



** To list all installed packages **

dpkg --list
dpkg --list | grep <package-name>
apt list --installed
apt list --installed | grep <package-name>
apt show <package-name>
grep " install " /var/log/dpkg.log

**** SOPHOS SSL VPN SETUP IN LINUX 
Type the command sudo "openvpn --config" and drag the .ovpn configuration file to the terminal window

*** CHECK OPEN PORTS IN UBUNTU **
ss -tuln
netstat -tuln
nmap -sT -O localhost
ss -tuln | grep 8080

*** CHECK OPEN PORTS IN WINDOWS ***
netstat -an | find "LISTEN"
netstat -ab | more      >>>   To see processes associated with the ports, use:
Get-NetTCPConnection -State Listen
Get-NetTCPConnection -LocalPort 80
netsh firewall show state

*** FIREWALL COMMAND ***
sudo ufw status numbered
sudo ufw delete 1
ufw status

*** IPTABLES ***
sudo iptables -L --line-numbers                  >>>    
sudo iptables -D INPUT <line-number>              >>>  delete a specific rule for a port
sudo iptables -D INPUT -p tcp --dport 8080 -j ACCEPT
sudo iptables-save > /etc/iptables/rules.v4















